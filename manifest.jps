type: install
id: postgres-master-slave
baseUrl: https://raw.githubusercontent.com/jelastic-jps/postgresql-replication/master
homepage: http://docs.jelastic.com/postgresql-database-replication
logo: /images/postgres-70x70.png
name: PostgreSQL Master-Slave Cluster
description:
  text: |
    PostgreSQL Master-Slave Cluster for improving data availability with asynchronous replication. 
    PostgreSQL is a powerful, open source object-relational database system with over 30 years of active development that has earned it a strong reputation for reliability, feature robustness, and performance.
  short: PostgreSQL Master-Slave Cluster with asynchronous replication.

categories:
  - apps/clustered-dbs
  - apps/clusters

settings:
  fields:
    caption: Version
    name: nodeType
    type: list    
    values: 
      postgres11: PostgreSQL 11
      #postgres12: PostgreSQL 12
    default: postgres11

nodes:
  cloudlets: 8
  count: 2
  nodeType: ${settings.nodeType}

skipNodeEmails: true

onBeforeResetNodePassword[sqldb]:
  - resetPassword
  - stopEvent

onInstall: init

actions:
  init:
    - forEach(nodes.sqldb):
        - if (${@i.id} == ${nodes.sqldb.master.id}): 
            setGlobals:
              mId: ${@i.id}
              mIP: ${@i.address}
        - else: 
            setGlobals:
              sId: ${@i.id}
              sIP: ${@i.address}          
    - cmd [${globals.mId}]: |-
        wget "${baseUrl}/scripts/execCmdScript.sh" -O /var/lib/pgsql/script.sh 2>&1
        bash -x /var/lib/pgsql/script.sh master ${globals.sIP} ${nodes.sqldb.password} ${globals.mIP} 1>> /var/log/run.log 2>> /var/log/run.log
    - cmd [${globals.sId}]: |-
        wget "${baseUrl}/scripts/execCmdScript.sh" -O /var/lib/pgsql/script.sh 2>&1
        bash -x /var/lib/pgsql/script.sh slave ${globals.sIP} ${nodes.sqldb.password} ${globals.mIP} 1>> /var/log/run.log 2>> /var/log/run.log
    
  resetPassword:
    script: /scripts/resetNodePassword.js
  

startPage: ${nodes.sqldb.master.url}
success: |
  **Admin Panel**: [${nodes.sqldb.master.url}](${nodes.sqldb.master.url})  
  **User**: webadmin  
  **Password**: ${nodes.sqldb.password}  
